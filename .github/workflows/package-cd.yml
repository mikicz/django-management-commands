name: Package CD

on:
  push:
    tags:
      - "*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      package-version: ${{ steps.package-version.outputs.package-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          cache: pip
      - run: python -m pip install --upgrade pip
      - run: python -m pip install build
      - run: python -m build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*
      - run: python -m pip install .
      - id: package-version
        run: |
          echo "package-version=$(
            python -c 'import sys, management_commands; sys.stdout.write(management_commands.__version__)'
          )" >> $GITHUB_OUTPUT
  tag:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          if [ "${{ needs.build.outputs.package-version }}" != "${{ github.ref_name }}" ]; then
            exit 1
          fi
  pypi:
    needs:
      - tag
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    environment:
      name: PyPI
      url: https://pypi.org/p/django-management-commands/
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - uses: pypa/gh-action-pypi-publish@release/v1
  release:
    needs:
      - pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
